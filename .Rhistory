library(gridExtra)
library(dplyr)
library(magrittr)
source("preprocessing.R")
###-----CY Leung-----
cy_sent_meeting_all <- sapply(cy_legco_text, function(x) sapply(x, function(y) processing(y)))
cy_sent_meeting_pro_est <-  sapply(cy_sent_meeting_all, function(x) x[, colnames(x) %in% pro_est$id])
cy_sent_meeting_non_pro_est <-  sapply(cy_sent_meeting_all, function(x) x[, !colnames(x) %in% pro_est$id])
cy_sent_meeting_all %<>% sapply(., function(x) apply(x, 1, mean))
cy_sent_meeting_pro_est %<>% sapply(., function(x) apply(x, 1, mean))
cy_sent_meeting_non_pro_est %<>% sapply(., function(x) apply(x, 1, mean))
cy_sent_meeting <- data.frame(date = rep(colnames(cy_sent_meeting_all), 3) %>%
gsub("T.*", "", .),
positive = cbind(cy_sent_meeting_all,
cy_sent_meeting_pro_est,
cy_sent_meeting_non_pro_est)[2, ],
camp = rep(c("all", "pro-establishment", "non-pro-establishment"),
each = ncol(cy_sent_meeting_all)))
# remove meetings with only one camp attending
cy_sent_meeting <- cy_sent_meeting %$% .[!date == date[is.nan(positive)], ]
# plot
g_cy <- ggplot(cy_sent_meeting, aes(x = date, y = positive, group = camp)) +
geom_line(aes(linetype = camp, color = camp)) +
scale_color_manual(values=c("#999999", "#0000FF", "#FF0000"))+
scale_linetype_manual(values=c("twodash", "solid", "solid")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none",
axis.title.x = element_blank()) +
ylim(0, 1) +
ggtitle("CY Leung") +
geom_point()
###-----Carrie Lam-----
cl_legco_text <- readRDS("cl_legco_text.rds")
cl_sent_meeting_all <- sapply(cl_legco_text, function(x) sapply(x, function(y) processing(y)))
cl_sent_meeting_pro_est <-  sapply(cl_sent_meeting_all, function(x) x[, colnames(x) %in% pro_est$id])
cl_sent_meeting_non_pro_est <-  sapply(cl_sent_meeting_all, function(x) x[, !colnames(x) %in% pro_est$id])
cl_sent_meeting_all %<>% sapply(., function(x) apply(x, 1, mean))
cl_sent_meeting_pro_est %<>% sapply(., function(x) apply(x, 1, mean))
cl_sent_meeting_non_pro_est %<>% sapply(., function(x) apply(x, 1, mean))
cl_sent_meeting <- data.frame(date = rep(colnames(cl_sent_meeting_all), 3) %>%
gsub("T.*", "", .),
positive = cbind(cl_sent_meeting_all,
cl_sent_meeting_pro_est,
cl_sent_meeting_non_pro_est)[2, ],
camp = rep(c("all", "pro-establishment", "non-pro-establishment"),
each = ncol(cl_sent_meeting_all)))
# remove meetings with only one camp attending
cl_sent_meeting <- cl_sent_meeting %$% .[!date == date[is.nan(positive)], ]
# plot
g_cl <- ggplot(cl_sent_meeting, aes(x = date, y = positive, group = camp)) +
geom_line(aes(linetype = camp, color = camp)) +
scale_color_manual(values=c("#999999", "#0000FF", "#FF0000"))+
scale_linetype_manual(values=c("twodash", "solid", "solid")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = c(.85, .9),
axis.title.x = element_blank(), axis.title.y = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
ylim(0, 1) +
ggtitle("Carrie Lam") +
geom_point()
source("preprocessing.R", encoding = "UTF-8")
###-----Function-----
## Function to extract legend to share between graphs
# from https://github.com/hadley/ggplot2/wiki/Share-a-legend-between-two-ggplot2-graphs
g_legend <- function(a.gplot) {
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)
}
###-----CY Leung-----
cy_legco_text <- readRDS("cy_legco_text.rds")
cy_all <- unlist(cy_legco_text, recursive = FALSE) # expand list to remove date categorisation
names(cy_all) %<>% gsub(".*\\.", "", .)
# merge all speech made by a member
cy_all[unique(names(cy_all)[duplicated(names(cy_all))])] <-
sapply(unique(names(cy_all)[duplicated(names(cy_all))]),
function(x) unlist(cy_all[names(cy_all) == x]))
cy_all %<>% .[!duplicated(names(.))]
# generate prop tables for each members
cy_sent_all <- sapply(cy_all, function(x) processing(x))
cy_sent_pro_est <- cy_sent_all[, colnames(cy_sent_all) %in% pro_est$id]
cy_sent_non_pro_est <- cy_sent_all[, !colnames(cy_sent_all) %in% pro_est$id]
# construct data frame
cy_sent_all <- data.frame(name = rep(sapply(colnames(cy_sent_all),
function(x) members_name %$% NameEng[SpeakerID == x]),
each = 2),
prop = as.numeric(cy_sent_all),
sentiment = rep(c("negative", "positive"), ncol(cy_sent_all)))
cy_sent_pro_est <- data.frame(name = rep(sapply(colnames(cy_sent_pro_est),
function(x) members_name %$% NameEng[SpeakerID == x]),
each = 2),
prop = as.numeric(cy_sent_pro_est),
sentiment = rep(c("negative", "positive"), ncol(cy_sent_pro_est)))
cy_sent_non_pro_est <- data.frame(name = rep(sapply(colnames(cy_sent_non_pro_est),
function(x) members_name %$% NameEng[SpeakerID == x]),
each = 2),
prop = as.numeric(cy_sent_non_pro_est),
sentiment = rep(c("negative", "positive"), ncol(cy_sent_non_pro_est)))
# sort
cy_sent_all <- arrange(cy_sent_all, sentiment, prop)
cy_sent_all$name %<>% factor(., levels = unique(.))
cy_sent_pro_est <- arrange(cy_sent_pro_est, sentiment, prop)
cy_sent_pro_est$name %<>% factor(., levels = unique(.))
cy_sent_non_pro_est <- arrange(cy_sent_non_pro_est, sentiment, prop)
cy_sent_non_pro_est$name %<>% factor(., levels = unique(.))
# plot
colours <- ifelse(cy_sent_all$name %in% cy_sent_pro_est$name, "#D32F2F", "#1976D2")
g1 <- ggplot(cy_sent_all, aes(x = name, y = prop, fill = sentiment)) +
geom_bar(position = "fill", stat = "identity") +
ggtitle("All") +
theme(legend.position = "bottom", axis.title.y = element_blank(),
axis.text.y = element_text(color = colours)) +
coord_flip()
g2 <- ggplot(cy_sent_pro_est, aes(x = name, y = prop, fill = sentiment)) +
geom_bar(position = "fill", stat = "identity") +
ggtitle("Pro-establishment") +
theme(legend.position = "none", axis.title.y = element_blank(),
axis.text.y = element_text(color = "#D32F2F")) +
coord_flip()
g3 <- ggplot(cy_sent_non_pro_est, aes(x = name, y = prop, fill = sentiment)) +
geom_bar(position = "fill", stat = "identity") +
ggtitle("Non-pro-establishment") +
theme(legend.position = "none", axis.title.y = element_blank(),
axis.text.y = element_text(color = "#1976D2")) +
coord_flip()
glegend <- g_legend(g1)
png("cy-comp.png", width = 1800, height = 1200, units = "px")
grid.arrange(glegend, arrangeGrob(g1 + theme(legend.position="none"), g2, g3, nrow = 1),
top = textGrob("Legislators' Sentiment in CE-attending Sessions\n(CY Leung)",
gp = gpar(fontsize = 18, font = 2)), nrow = 2, heights = c(1, 10))
dev.off()
png("cy-comp.png", width = 1800, height = 1200, units = "px")
ggplot(cy_sent_all, aes(x = name, y = prop, fill = sentiment)) +
geom_bar(position = "fill", stat = "identity") +
ggtitle("All") +
theme(legend.position = "bottom", axis.title.y = element_blank(),
axis.text.y = element_text(color = colours))
dev.off()
colours <- ifelse(cy_sent_all$name %in% cy_sent_pro_est$name, "#D32F2F", "#1976D2")
g1 <- ggplot(cy_sent_all, aes(x = name, y = prop, fill = sentiment)) +
geom_bar(position = "fill", stat = "identity") +
ggtitle("All") +
theme(legend.position = "bottom", axis.title.y = element_blank(),
axis.text.y = element_text(color = colours)) +
coord_flip()
g2 <- ggplot(cy_sent_pro_est, aes(x = name, y = prop, fill = sentiment)) +
geom_bar(position = "fill", stat = "identity") +
ggtitle("Pro-establishment") +
theme(legend.position = "none", axis.title.y = element_blank(),
axis.text.y = element_text(color = "#D32F2F")) +
coord_flip()
g3 <- ggplot(cy_sent_non_pro_est, aes(x = name, y = prop, fill = sentiment)) +
geom_bar(position = "fill", stat = "identity") +
ggtitle("Non-pro-establishment") +
theme(legend.position = "none", axis.title.y = element_blank(),
axis.text.y = element_text(color = "#1976D2")) +
coord_flip()
glegend <- g_legend(g1)
png("cy.png", width = 18, height = 12, units = "in", res = 600)
png("cy-comp.png", width = 1800, height = 1200, units = "px")
grid.arrange(glegend, arrangeGrob(g1 + theme(legend.position="none"), g2, g3, nrow = 1),
top = textGrob("Legislators' Sentiment in CE-attending Sessions\n(CY Leung)",
gp = gpar(fontsize = 18, font = 2)), nrow = 2, heights = c(1, 10))
dev.off()
png("cy-comp.png", width = 1800, height = 1200, units = "px")
cl_legco_text <- readRDS("cl_legco_text.rds")
cl_all <- unlist(cl_legco_text, recursive = FALSE)
names(cl_all) %<>% gsub(".*\\.", "", .)
cl_all[unique(names(cl_all)[duplicated(names(cl_all))])] <- # merge duplicated rows
sapply(unique(names(cl_all)[duplicated(names(cl_all))]),
function(x) unlist(cl_all[names(cl_all) == x]))
cl_all %<>% .[!duplicated(names(.))]
cl_sent_all <- sapply(cl_all, function(x) processing(x))
cl_sent_pro_est <- cl_sent_all[, colnames(cl_sent_all) %in% pro_est$id]
cl_sent_non_pro_est <- cl_sent_all[, !colnames(cl_sent_all) %in% pro_est$id]
cl_sent_all <- data.frame(name = rep(sapply(colnames(cl_sent_all),
function(x) members_name %$% NameEng[SpeakerID == x]),
each = 2),
prop = as.numeric(cl_sent_all),
sentiment = rep(c("negative", "positive"), ncol(cl_sent_all)))
cl_sent_pro_est <- data.frame(name = rep(sapply(colnames(cl_sent_pro_est),
function(x) members_name %$% NameEng[SpeakerID == x]),
each = 2),
prop = as.numeric(cl_sent_pro_est),
sentiment = rep(c("negative", "positive"), ncol(cl_sent_pro_est)))
cl_sent_non_pro_est <- data.frame(name = rep(sapply(colnames(cl_sent_non_pro_est),
function(x) members_name %$% NameEng[SpeakerID == x]),
each = 2),
prop = as.numeric(cl_sent_non_pro_est),
sentiment = rep(c("negative", "positive"), ncol(cl_sent_non_pro_est)))
cl_sent_all <- arrange(cl_sent_all, sentiment, prop)
cl_sent_all$name %<>% factor(., levels = unique(.))
cl_sent_pro_est <- arrange(cl_sent_pro_est, sentiment, prop)
cl_sent_pro_est$name %<>% factor(., levels = unique(.))
cl_sent_non_pro_est <- arrange(cl_sent_non_pro_est, sentiment, prop)
cl_sent_non_pro_est$name %<>% factor(., levels = unique(.))
# plot
colours <- ifelse(cl_sent_all$name %in% cl_sent_pro_est$name, "#D32F2F", "#1976D2")
g1 <- ggplot(cl_sent_all, aes(x = name, y = prop, fill = sentiment)) +
geom_bar(position = "fill", stat = "identity") +
ggtitle("All") +
theme(legend.position = "top", axis.title.y = element_blank(),
axis.text.y = element_text(color = colours)) +
coord_flip()
g2 <- ggplot(cl_sent_pro_est, aes(x = name, y = prop, fill = sentiment)) +
geom_bar(position = "fill", stat = "identity") +
ggtitle("Pro-establishment") +
theme(legend.position = "none", axis.title.y = element_blank(),
axis.text.y = element_text(color = "#D32F2F")) +
coord_flip()
g3 <- ggplot(cl_sent_non_pro_est, aes(x = name, y = prop, fill = sentiment)) +
geom_bar(position = "fill", stat = "identity") +
ggtitle("Non-pro-establishment") +
theme(legend.position = "none", axis.title.y = element_blank(),
axis.text.y = element_text(color = "#1976D2")) +
coord_flip()
glegend <- g_legend(g1)
grid.arrange(glegend, arrangeGrob(g1 + theme(legend.position="none"), g2, g3, nrow = 1),
top = textGrob("Legislators' Sentiment in CE-attending Sessions\n(Carrie Lam)",
gp = gpar(fontsize = 18, font = 2)), nrow = 2, heights = c(1, 10))
dev.off()
y_all <- unlist(cy_legco_text, recursive = FALSE) # expand list to remove date categorisation
names(cy_all) %<>% gsub(".*\\.", "", .)
# merge all speech made by a member
cy_all[unique(names(cy_all)[duplicated(names(cy_all))])] <-
sapply(unique(names(cy_all)[duplicated(names(cy_all))]),
function(x) unlist(cy_all[names(cy_all) == x]))
cy_all %<>% .[!duplicated(names(.))]
# generate prop tables for each members
cy_sent_all <- sapply(cy_all, function(x) processing(x))
cy_sent_pro_est <- cy_sent_all[, colnames(cy_sent_all) %in% pro_est$id]
cy_sent_non_pro_est <- cy_sent_all[, !colnames(cy_sent_all) %in% pro_est$id]
# construct data frame
cy_sent_all <- data.frame(name = rep(sapply(colnames(cy_sent_all),
function(x) members_name %$% NameEng[SpeakerID == x]),
each = 2),
prop = as.numeric(cy_sent_all),
sentiment = rep(c("negative", "positive"), ncol(cy_sent_all)))
cy_sent_pro_est <- data.frame(name = rep(sapply(colnames(cy_sent_pro_est),
function(x) members_name %$% NameEng[SpeakerID == x]),
each = 2),
prop = as.numeric(cy_sent_pro_est),
sentiment = rep(c("negative", "positive"), ncol(cy_sent_pro_est)))
cy_sent_non_pro_est <- data.frame(name = rep(sapply(colnames(cy_sent_non_pro_est),
function(x) members_name %$% NameEng[SpeakerID == x]),
each = 2),
prop = as.numeric(cy_sent_non_pro_est),
sentiment = rep(c("negative", "positive"), ncol(cy_sent_non_pro_est)))
# sort
cy_sent_all <- arrange(cy_sent_all, sentiment, prop)
cy_sent_all$name %<>% factor(., levels = unique(.))
cy_sent_pro_est <- arrange(cy_sent_pro_est, sentiment, prop)
cy_sent_pro_est$name %<>% factor(., levels = unique(.))
cy_sent_non_pro_est <- arrange(cy_sent_non_pro_est, sentiment, prop)
cy_sent_non_pro_est$name %<>% factor(., levels = unique(.))
# plot
colours <- ifelse(cy_sent_all$name %in% cy_sent_pro_est$name, "#D32F2F", "#1976D2")
g1 <- ggplot(cy_sent_all, aes(x = name, y = prop, fill = sentiment)) +
geom_bar(position = "fill", stat = "identity") +
ggtitle("All") +
theme(legend.position = "bottom", axis.title.y = element_blank(),
axis.text.y = element_text(color = colours)) +
coord_flip()
g2 <- ggplot(cy_sent_pro_est, aes(x = name, y = prop, fill = sentiment)) +
geom_bar(position = "fill", stat = "identity") +
ggtitle("Pro-establishment") +
theme(legend.position = "none", axis.title.y = element_blank(),
axis.text.y = element_text(color = "#D32F2F")) +
coord_flip()
g3 <- ggplot(cy_sent_non_pro_est, aes(x = name, y = prop, fill = sentiment)) +
geom_bar(position = "fill", stat = "identity") +
ggtitle("Non-pro-establishment") +
theme(legend.position = "none", axis.title.y = element_blank(),
axis.text.y = element_text(color = "#1976D2")) +
coord_flip()
glegend <- g_legend(g1)
png("cy-comp.png", width = 1800, height = 1200, units = "px")
grid.arrange(glegend, arrangeGrob(g1 + theme(legend.position="none"), g2, g3, nrow = 1),
top = textGrob("Legislators' Sentiment in CE-attending Sessions\n(CY Leung)",
gp = gpar(fontsize = 18, font = 2)), nrow = 2, heights = c(1, 10))
dev.off()
cl_all <- unlist(cl_legco_text, recursive = FALSE)
names(cl_all) %<>% gsub(".*\\.", "", .)
cl_all[unique(names(cl_all)[duplicated(names(cl_all))])] <- # merge duplicated rows
sapply(unique(names(cl_all)[duplicated(names(cl_all))]),
function(x) unlist(cl_all[names(cl_all) == x]))
cl_all %<>% .[!duplicated(names(.))]
cl_sent_all <- sapply(cl_all, function(x) processing(x))
cl_sent_pro_est <- cl_sent_all[, colnames(cl_sent_all) %in% pro_est$id]
cl_sent_non_pro_est <- cl_sent_all[, !colnames(cl_sent_all) %in% pro_est$id]
cl_sent_all <- data.frame(name = rep(sapply(colnames(cl_sent_all),
function(x) members_name %$% NameEng[SpeakerID == x]),
each = 2),
prop = as.numeric(cl_sent_all),
sentiment = rep(c("negative", "positive"), ncol(cl_sent_all)))
cl_sent_pro_est <- data.frame(name = rep(sapply(colnames(cl_sent_pro_est),
function(x) members_name %$% NameEng[SpeakerID == x]),
each = 2),
prop = as.numeric(cl_sent_pro_est),
sentiment = rep(c("negative", "positive"), ncol(cl_sent_pro_est)))
cl_sent_non_pro_est <- data.frame(name = rep(sapply(colnames(cl_sent_non_pro_est),
function(x) members_name %$% NameEng[SpeakerID == x]),
each = 2),
prop = as.numeric(cl_sent_non_pro_est),
sentiment = rep(c("negative", "positive"), ncol(cl_sent_non_pro_est)))
cl_sent_all <- arrange(cl_sent_all, sentiment, prop)
cl_sent_all$name %<>% factor(., levels = unique(.))
cl_sent_pro_est <- arrange(cl_sent_pro_est, sentiment, prop)
cl_sent_pro_est$name %<>% factor(., levels = unique(.))
cl_sent_non_pro_est <- arrange(cl_sent_non_pro_est, sentiment, prop)
cl_sent_non_pro_est$name %<>% factor(., levels = unique(.))
# plot
colours <- ifelse(cl_sent_all$name %in% cl_sent_pro_est$name, "#D32F2F", "#1976D2")
g1 <- ggplot(cl_sent_all, aes(x = name, y = prop, fill = sentiment)) +
geom_bar(position = "fill", stat = "identity") +
ggtitle("All") +
theme(legend.position = "top", axis.title.y = element_blank(),
axis.text.y = element_text(color = colours)) +
coord_flip()
g2 <- ggplot(cl_sent_pro_est, aes(x = name, y = prop, fill = sentiment)) +
geom_bar(position = "fill", stat = "identity") +
ggtitle("Pro-establishment") +
theme(legend.position = "none", axis.title.y = element_blank(),
axis.text.y = element_text(color = "#D32F2F")) +
coord_flip()
g3 <- ggplot(cl_sent_non_pro_est, aes(x = name, y = prop, fill = sentiment)) +
geom_bar(position = "fill", stat = "identity") +
ggtitle("Non-pro-establishment") +
theme(legend.position = "none", axis.title.y = element_blank(),
axis.text.y = element_text(color = "#1976D2")) +
coord_flip()
glegend <- g_legend(g1)
png("cl-comp.png", width = 1800, height = 1200, units = "px")
grid.arrange(glegend, arrangeGrob(g1 + theme(legend.position="none"), g2, g3, nrow = 1),
top = textGrob("Legislators' Sentiment in CE-attending Sessions\n(Carrie Lam)",
gp = gpar(fontsize = 18, font = 2)), nrow = 2, heights = c(1, 10))
dev.off()
cy_sent_meeting_all <- sapply(cy_legco_text, function(x) sapply(x, function(y) processing(y)))
cy_sent_meeting_pro_est <-  sapply(cy_sent_meeting_all, function(x) x[, colnames(x) %in% pro_est$id])
cy_sent_meeting_non_pro_est <-  sapply(cy_sent_meeting_all, function(x) x[, !colnames(x) %in% pro_est$id])
cy_sent_meeting_all %<>% sapply(., function(x) apply(x, 1, mean))
cy_sent_meeting_pro_est %<>% sapply(., function(x) apply(x, 1, mean))
cy_sent_meeting_non_pro_est %<>% sapply(., function(x) apply(x, 1, mean))
cy_sent_meeting <- data.frame(date = rep(colnames(cy_sent_meeting_all), 3) %>%
gsub("T.*", "", .),
positive = cbind(cy_sent_meeting_all,
cy_sent_meeting_pro_est,
cy_sent_meeting_non_pro_est)[2, ],
camp = rep(c("all", "pro-establishment", "non-pro-establishment"),
each = ncol(cy_sent_meeting_all)))
# remove meetings with only one camp attending
cy_sent_meeting <- cy_sent_meeting %$% .[!date == date[is.nan(positive)], ]
# plot
g_cy <- ggplot(cy_sent_meeting, aes(x = date, y = positive, group = camp)) +
geom_line(aes(linetype = camp, color = camp)) +
scale_color_manual(values=c("#999999", "#0000FF", "#FF0000"))+
scale_linetype_manual(values=c("twodash", "solid", "solid")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none",
axis.title.x = element_blank()) +
ylim(0, 1) +
ggtitle("CY Leung") +
geom_point()
cl_sent_meeting_all <- sapply(cl_legco_text, function(x) sapply(x, function(y) processing(y)))
cl_sent_meeting_pro_est <-  sapply(cl_sent_meeting_all, function(x) x[, colnames(x) %in% pro_est$id])
cl_sent_meeting_non_pro_est <-  sapply(cl_sent_meeting_all, function(x) x[, !colnames(x) %in% pro_est$id])
cl_sent_meeting_all %<>% sapply(., function(x) apply(x, 1, mean))
cl_sent_meeting_pro_est %<>% sapply(., function(x) apply(x, 1, mean))
cl_sent_meeting_non_pro_est %<>% sapply(., function(x) apply(x, 1, mean))
cl_sent_meeting <- data.frame(date = rep(colnames(cl_sent_meeting_all), 3) %>%
gsub("T.*", "", .),
positive = cbind(cl_sent_meeting_all,
cl_sent_meeting_pro_est,
cl_sent_meeting_non_pro_est)[2, ],
camp = rep(c("all", "pro-establishment", "non-pro-establishment"),
each = ncol(cl_sent_meeting_all)))
# remove meetings with only one camp attending
cl_sent_meeting <- cl_sent_meeting %$% .[!date == date[is.nan(positive)], ]
# plot
g_cl <- ggplot(cl_sent_meeting, aes(x = date, y = positive, group = camp)) +
geom_line(aes(linetype = camp, color = camp)) +
scale_color_manual(values=c("#999999", "#0000FF", "#FF0000"))+
scale_linetype_manual(values=c("twodash", "solid", "solid")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = c(.85, .9),
axis.title.x = element_blank(), axis.title.y = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
ylim(0, 1) +
ggtitle("Carrie Lam") +
geom_point()
png("timetrend-all-comp.png", width = 2000, height = 1000, units = "px")
g_cy
dev.off()
ggplot(cy_sent_meeting, aes(x = date, y = positive, group = camp)) +
geom_line(aes(linetype = camp, color = camp)) +
scale_color_manual(values=c("#999999", "#33CC00", "#0000FF"))+
scale_linetype_manual(values=c("twodash", "solid", "solid")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none",
axis.title.x = element_blank()) +
ylim(0, 1) +
ggtitle("CY Leung") +
geom_point()
g_cy <- ggplot(cy_sent_meeting, aes(x = date, y = positive, group = camp)) +
geom_line(aes(linetype = camp, color = camp)) +
scale_color_manual(values=c("#999999", "#33CC00", "#0000FF"))+
scale_linetype_manual(values=c("twodash", "solid", "solid")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "right",
axis.title.x = element_blank()) +
ylim(0, 1) +
ggtitle("CY Leung") +
geom_point()
ggplot(cy_sent_meeting, aes(x = date, y = positive, group = camp)) +
geom_line(aes(linetype = camp, color = camp)) +
scale_color_manual(values=c("#999999", "#33CC00", "#0000FF"))+
scale_linetype_manual(values=c("twodash", "solid", "solid")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "right",
axis.title.x = element_blank()) +
ylim(0, 1) +
ggtitle("CY Leung") +
geom_point()
png("timetrend-cy-comp.png", width = 2000, height = 1000, units = "px")
ggplot(cy_sent_meeting, aes(x = date, y = positive, group = camp)) +
geom_line(aes(linetype = camp, color = camp)) +
scale_color_manual(values=c("#999999", "#33CC00", "#0000FF"))+
scale_linetype_manual(values=c("twodash", "solid", "solid")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "right",
axis.title.x = element_blank()) +
ylim(0, 1) +
ggtitle("CY Leung") +
geom_point()
dev.off()
ggplot(cl_sent_meeting, aes(x = date, y = positive, group = camp)) +
geom_line(aes(linetype = camp, color = camp)) +
scale_color_manual(values=c("#999999", "#0000FF", "#FF0000"))+
scale_linetype_manual(values=c("#999999", "#33CC00", "#0000FF"))+
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = c(.85, .9),
axis.title.x = element_blank(), axis.title.y = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
ylim(0, 1) +
ggtitle("Carrie Lam") +
geom_point()
cl_legco_text <- readRDS("cl_legco_text.rds")
cl_sent_meeting_all <- sapply(cl_legco_text, function(x) sapply(x, function(y) processing(y)))
cl_sent_meeting_pro_est <-  sapply(cl_sent_meeting_all, function(x) x[, colnames(x) %in% pro_est$id])
cl_sent_meeting_non_pro_est <-  sapply(cl_sent_meeting_all, function(x) x[, !colnames(x) %in% pro_est$id])
cl_sent_meeting_all %<>% sapply(., function(x) apply(x, 1, mean))
cl_sent_meeting_pro_est %<>% sapply(., function(x) apply(x, 1, mean))
cl_sent_meeting_non_pro_est %<>% sapply(., function(x) apply(x, 1, mean))
cl_sent_meeting <- data.frame(date = rep(colnames(cl_sent_meeting_all), 3) %>%
gsub("T.*", "", .),
positive = cbind(cl_sent_meeting_all,
cl_sent_meeting_pro_est,
cl_sent_meeting_non_pro_est)[2, ],
camp = rep(c("all", "pro-establishment", "non-pro-establishment"),
each = ncol(cl_sent_meeting_all)))
# remove meetings with only one camp attending
cl_sent_meeting <- cl_sent_meeting %$% .[!date == date[is.nan(positive)], ]
ggplot(cl_sent_meeting, aes(x = date, y = positive, group = camp)) +
geom_line(aes(linetype = camp, color = camp)) +
scale_color_manual(values=c("#999999", "#0000FF", "#FF0000"))+
scale_linetype_manual(values=c("#999999", "#33CC00", "#0000FF"))+
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = c(.85, .9),
axis.title.x = element_blank(), axis.title.y = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
ylim(0, 1) +
ggtitle("Carrie Lam") +
geom_point()
ggplot(cl_sent_meeting, aes(x = date, y = positive, group = camp)) +
geom_line(aes(linetype = camp, color = camp)) +
scale_color_manual(values=c("#999999", "#33CC00", "#0000FF"))+
scale_linetype_manual(values=c("twodash", "solid", "solid")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = c(.85, .9),
axis.title.x = element_blank(), axis.title.y = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
ylim(0, 1) +
ggtitle("Carrie Lam") +
geom_point()
ggplot(cl_sent_meeting, aes(x = date, y = positive, group = camp)) +
geom_line(aes(linetype = camp, color = camp)) +
scale_color_manual(values=c("#999999", "#33CC00", "#0000FF"))+
scale_linetype_manual(values=c("twodash", "solid", "solid")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = c(.85, .9),
axis.title.x = element_blank()) +
ylim(0, 1) +
ggtitle("Carrie Lam") +
geom_point()
ggplot(cl_sent_meeting, aes(x = date, y = positive, group = camp)) +
geom_line(aes(linetype = camp, color = camp)) +
scale_color_manual(values=c("#999999", "#33CC00", "#0000FF"))+
scale_linetype_manual(values=c("twodash", "solid", "solid")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()) +
ylim(0, 1) +
ggtitle("Carrie Lam") +
geom_point()
ggplot(cl_sent_meeting, aes(x = date, y = positive, group = camp)) +
geom_line(aes(linetype = camp, color = camp)) +
scale_color_manual(values=c("#999999", "#33CC00", "#0000FF"))+
scale_linetype_manual(values=c("twodash", "solid", "solid")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()) +
ylim(0, 1) +
ggtitle("Carrie Lam") +
geom_point()
png("timetrend-cl-comp.png", width = 2000, height = 1000, units = "px")
ggplot(cl_sent_meeting, aes(x = date, y = positive, group = camp)) +
geom_line(aes(linetype = camp, color = camp)) +
scale_color_manual(values=c("#999999", "#33CC00", "#0000FF"))+
scale_linetype_manual(values=c("twodash", "solid", "solid")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()) +
ylim(0, 1) +
ggtitle("Carrie Lam") +
geom_point()
dev.off()
